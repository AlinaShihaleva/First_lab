# -*- coding: utf-8 -*-
"""РГЗ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yLZY0XJY0IWGIXWQsBeYMXthzANAKzVu
"""

import matplotlib.pyplot as plt

#Открываем файл для чтения
file = open('Граф.txt')

#Считываем график нагрузки из файла
day_load = file.readlines()

#Переводим данные из массива в числовой тип
day_load = list(map(int, day_load))

#Создаём массив часов для построения графика
time_array = [i for i in range (24)]

#Рисуем график нагрузки и устанавливаем ему название
fig, ax = plt.subplots(2, 1)
fig.set_size_inches(10, 10)
ax[0].bar(time_array, day_load)
ax[0].set_title("Гистограмма графика нагрузки")
ax[0].set_xlabel("Часы")
ax[0].set_ylabel("Нагрузка(%)")

#Данные для рассчёта дохода
Max_P = 5*1000
# Считаем общую нагрузку за день в кВт
daily_P = [i/100*Max_P for i in day_load]
daily_P = sum(daily_P)
#Дневной доход
daily_income = daily_P*0.25

CF = daily_income*365

n = 1
#Изначальные инвестиционные затраты
NPV = -30000000

npv_array = []
npv_array.append(NPV)
'''В цикле прибавляем дисконтированный доход к изначальным затратам;
когда NPV достигает 0, мы выходим из цикла, потому что затраты окупились'''
while True:
  NPV += CF/(1 + 0.085)**n
  npv_array.append(NPV)
  if (NPV >= 0):
    break
  n = n + 1

ax[1].plot(npv_array)
ax[1].set_title("График чистого дисконтированного дохода")
ax[1].set_xlabel("Год")
ax[1].set_ylabel("Рубли (Млн. * 1e7)")
print("Срок окупаемости:", n, "лет")

plt.show()